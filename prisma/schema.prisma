// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  auth0UserId  String       @unique
  email        String       @unique
  name         String?
  activeTeamId String?
  firstLoginAt DateTime?
  createdAt    DateTime     @default(now())
  memberships  TeamMember[]
}

model Team {
  id          String       @id @default(cuid())
  name        String
  createdById String
  createdAt   DateTime     @default(now())
  members     TeamMember[]
}

enum TeamRole {
  OWNER
  ADMIN
  MODERATOR
  MEMBER
}

model TeamMember {
  id        String   @id @default(cuid())
  userId    String
  teamId    String
  role      TeamRole @default(MEMBER)
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  team      Team     @relation(fields: [teamId], references: [id])

  @@unique([userId, teamId])
}

model invite {
  id               String    @id @default(cuid())
  teamId           String
  invitedEmail     String?
  role             TeamRole  @default(MEMBER)
  token            String    @unique // signerad, single-use
  expiresAt        DateTime
  acceptedAt       DateTime?
  acceptedByUserId String?
}
